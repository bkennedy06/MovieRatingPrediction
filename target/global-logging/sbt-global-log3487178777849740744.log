[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.6 (Oracle Corporation Java 18.0.2.1)
[debug]       Load.loadUnit: plugins took 24.3911ms
[debug]       Load.loadUnit: defsScala took 0.0064ms
[debug] [Loading] Scanning directory C:\Users\ckenn\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ckenn\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.6931 ms
[debug]           Load.resolveProject(global-plugins) took 0.8143ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ckenn\.sbt\1.0\plugins, plugins: List(<none>))) took 8.8121ms
[debug] [Loading] Done in C:\Users\ckenn\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 9.6984ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0058ms
[debug]     Load.loadUnit(file:/C:/Users/ckenn/.sbt/1.0/plugins/, ...) took 34.7089ms
[debug]   Load.apply: load took 35.6685ms
[debug]   Load.apply: resolveProjects took 0.0583ms
[debug]   Load.apply: finalTransforms took 5.4728ms
[debug]   Load.apply: config.delegates took 0.2637ms
[debug]   Load.apply: Def.make(settings)... took 35.4394ms
[debug]   Load.apply: structureIndex took 10.3277ms
[debug]   Load.apply: mkStreams took 0.0016ms
[info] loading global plugins from C:\Users\ckenn\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Forcing garbage collection...
[debug] Load.defaultLoad until apply took 1012.8917ms
[debug]           Load.loadUnit: plugins took 31.0006ms
[debug]           Load.loadUnit: defsScala took 0.0045ms
[debug] [Loading] Scanning directory C:\Users\ckenn\IdeaProjects\GroupProject369\project
[debug]             Load.loadUnit: mkEval took 0.3187ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ckenn\IdeaProjects\GroupProject369\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2248 ms
[info] loading settings for project groupproject369-build from idea.sbt...
[debug]               Load.resolveProject(groupproject369-build) took 3.3883ms
[debug]             Load.loadTransitive: finalizeProject(Project(id groupproject369-build, base: C:\Users\ckenn\IdeaProjects\GroupProject369\project, plugins: List(<none>))) took 4.9593ms
[debug] [Loading] Done in C:\Users\ckenn\IdeaProjects\GroupProject369\project, returning: (groupproject369-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 25.7554ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.9502ms
[debug]         Load.loadUnit(file:/C:/Users/ckenn/IdeaProjects/GroupProject369/project/, ...) took 61.5103ms
[debug]       Load.apply: load took 62.8989ms
[debug]       Load.apply: resolveProjects took 0.0806ms
[debug]       Load.apply: finalTransforms took 5.8648ms
[debug]       Load.apply: config.delegates took 0.362ms
[debug]       Load.apply: Def.make(settings)... took 47.1465ms
[debug]       Load.apply: structureIndex took 15.7926ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\ckenn\IdeaProjects\GroupProject369\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 349.9561ms
[debug]     Load.loadUnit: defsScala took 0.0058ms
[debug] [Loading] Scanning directory C:\Users\ckenn\IdeaProjects\GroupProject369
[debug]       Load.loadUnit: mkEval took 1.2113ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.9867 ms
[info] loading settings for project root from build.sbt...
[debug]         Load.resolveProject(root) took 26.4595ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\ckenn\IdeaProjects\GroupProject369, plugins: List(<none>))) took 27.7876ms
[debug] [Loading] Done in C:\Users\ckenn\IdeaProjects\GroupProject369, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 134.7002ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.2532ms
[debug]   Load.loadUnit(file:/C:/Users/ckenn/IdeaProjects/GroupProject369/, ...) took 495.0589ms
[debug] Load.apply: load took 496.5787ms
[debug] Load.apply: resolveProjects took 0.0707ms
[debug] Load.apply: finalTransforms took 12.5831ms
[debug] Load.apply: config.delegates took 0.1703ms
[debug] Load.apply: Def.make(settings)... took 40.8334ms
[debug] Load.apply: structureIndex took 12.8643ms
[debug] Load.apply: mkStreams took 0.0017ms
[info] set current project to GroupProject369 (in build file:/C:/Users/ckenn/IdeaProjects/GroupProject369/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
